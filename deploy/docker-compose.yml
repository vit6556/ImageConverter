version: '3.8'

services:
  nginx:
    build: nginx/
    container_name: image_converter_nginx
    ports:
      - ${PORT}:80
    restart: always
    depends_on:
      - backend

  backend:
    build:
      context: ..
      dockerfile: ./deploy/Dockerfile
    container_name: image_converter_backend
    command: uvicorn api.app:app --host 0.0.0.0 --port 8080 --reload
    volumes:
      - ../src/api:/app/api
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DBNUMBER=${REDIS_DBNUMBER}
    restart: always
    depends_on:
      - postgres

  postgres:
    image: postgres:16.2-alpine
    container_name: image_converter_postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: always

  redis:
    container_name: image_converter_redis
    image: redis:7.2.4
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/root/redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASES=1

  converter:
    container_name: image_converter_worker
    build:
      context: ..
      dockerfile: ./deploy/Dockerfile
    command: python3 -m converter.main
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DBNUMBER=${REDIS_DBNUMBER}
    restart: always
    depends_on:
      - redis
      - postgres

  prometheus:
    image: prom/prometheus
    container_name: image_converter_prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana-enterprise
    container_name: image_converter_grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  node-exporter:
    image: prom/node-exporter
    container_name: image_converter_node-exporter
    restart: always

volumes:
  postgres_data:
  redis_data:
  prometheus-data:
  grafana-data: